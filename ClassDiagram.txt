@startuml
package Model <<Folder>> {
	package strategie <<Folder>> {
		interface Strategie {
			int[] doComputePosion()
		}

		class Aleatoire {
			+int[] doComputePosion()
		}
		Strategie <-- Aleatoire : implements

		class Difficile {
			+int[] doComputePosion()
		}
		Strategie <-- Difficile : implements

		class MCTS_UCT {
			+int[] doComputePosion()
		}
		Strategie <-- MCTS_UCT : implements
	}

	class Bot {
		-Strategie strategie
		+Bot(Strategie strategie)
		+int[] executeStrategie()
	}
	strategie <-- Bot : uses

	package bateauFactory <<Folder>> {
		interface Bateau {
			Bateau creerBateau()
		}
	}

	class BateauFactory {
		+Bateau creerBateau()
	}
	bateauFactory <-- BateauFactory : uses

	class PlateauJeu <<Serializable>> {
		-{static}int largeur
		-{static}int longueur
		-int[][] plateauJoueur
		-int[][] plateauBot
		+PlateauJeu()
	}

	class FileManager {
		-{static}FileManager instance
		-FileManager()
		+{static}FileManager getInstance()
		~void saveToFile(String file)
		~void loadFromFile(String file)
	}
}
@enduml